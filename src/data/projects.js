import { projectImages } from '../assets/images';

export const projectsData = [
  {
    id: 1,
    title: "Easy Home - Real Estate Platform",
    images: [
      projectImages.projectThree.one,
      projectImages.projectThree.two,
      projectImages.projectThree.three,
      projectImages.projectThree.four,
      projectImages.projectThree.five,
    ],
    description: "A complete MERN stack real estate platform with role-based dashboards for Users, Agents, and Admins. Users can wishlist, review, and buy properties. Agents can add, update, and manage their listings and offers. Admins oversee users, properties, and reviews. The app includes real-time status updates, payment integration, and property verification.",
    technologies: [
      "React",
      "Firebase Auth",
      "MongoDB",
      "Express.js",
      "Node.js",
      "TanStack Query",
      "React Hook Form",
      "Tailwind CSS",
      "React Router DOM",
      "SweetAlert2",
      "Stripe.js",
    ],
    liveLink: "https://easy-home-5ec20.web.app/",
    githubLink: "https://github.com/iktushar01/Easy-Home-MERN-app.git",
    challenges: [
      "Implementing dynamic role-based dashboards for Users, Agents, and Admins",
      "Securing private routes with JWT and maintaining session persistence",
      "Validating property offer prices and real-time status changes (pending, accepted, rejected, bought)",
      "Implementing Admin-level fraud detection and property advertisement logic",
      "Real-time property review and wishlist system with modal support",
    ],
    improvements: [
      "Add agent selling statistics chart with data visualization (Recharts)",
      "Implement property report system for users and moderation by admin",
      "Enable user profile editing via modal with image and name update",
      "Add multi-language support for international users",
      "Implement advanced filters for properties based on price range and location",
    ],
  },
  {
    id: 2,
    title: "Marathon Management System",
    images: [
      projectImages.projectOne.one,
      projectImages.projectOne.two,
      projectImages.projectOne.three,
      projectImages.projectOne.four,
      projectImages.projectOne.five,
    ],
    description: "A full-stack web application designed to streamline the organization and participation of marathon events. Users can create marathons, register for events, and manage everything through a user-friendly dashboard.",
    technologies: [
      "React.js",
      "Node.js",
      "Express.js",
      "MongoDB",
      "Firebase",
      "Tailwind CSS",
    ],
    liveLink: "https://stridez-b25a1.web.app/",
    githubLink: "https://github.com/iktushar01/Marathon-Management-System.git",
    challenges: [
      "Implementing secure JWT-based authentication with Firebase and server verification",
      "Managing user roles and protecting routes with role-based access",
      "Integrating real-time countdown timers and dynamic search/sort functionality",
    ],
    improvements: [
      "Add admin analytics dashboard for event insights",
      "Integrate payment system for paid registrations",
      "Introduce push notifications and email confirmations",
    ],
  },
  {
    id: 3,
    title: "Recipe Book",
    images: [
      projectImages.projectTwo.four,
      projectImages.projectTwo.one,
      projectImages.projectTwo.two,
      projectImages.projectTwo.three,
      projectImages.projectTwo.five,
    ],
    description: "A feature-rich recipe sharing platform where users can create, explore, and manage personalized recipes. Includes filtering, top recipes, and protected user routes.",
    technologies: [
      "React.js",
      "Firebase Auth",
      "Node.js",
      "Express.js",
      "MongoDB",
      "TailwindCSS",
      "DaisyUI",
    ],
    liveLink: "https://recipebook99.netlify.app/",
    githubLink: "https://github.com/iktushar01/Recipe-Book.git",
    challenges: [
      "Building role-based access control for private routes",
      "Creating dynamic filtering by cuisine type",
      "Managing user-generated content securely with MongoDB",
    ],
    improvements: [
      "Add recipe rating and comment system",
      "Enable image upload for recipes",
      "Implement advanced search with tags and keywords",
    ],
  }
];
